---
import '@/styles/globals.css'
import BaseHead from '../components/BaseHead.astro'
import Footer from '../components/Footer.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts'
import TailwindIndicator from '@/components/TailwindIndicator.astro'
import { STORAGE_THEME_KEY, THEME_MAP } from '@/store/theme'
import { isProd } from '@/lib/utils'
---

<script is:inline define:vars={{ STORAGE_THEME_KEY, THEME_MAP }}>
  function setDarkMode(document) {
    const userTheme = localStorage.getItem(STORAGE_THEME_KEY)

    if (
      userTheme === THEME_MAP.dark ||
      (!userTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      document.documentElement.classList.add('dark')
    }
  }

  setDarkMode(document)

  document.addEventListener('astro:before-swap', (ev) => {
    // Pass the incoming document to set the theme on it
    setDarkMode(ev.newDocument)
  })
</script>

<!-- <script is:inline>
  function setDarkMode(document) {
    const getThemePreference = () => {
      if (
        typeof localStorage !== 'undefined' &&
        localStorage.getItem('theme')
      ) {
        return localStorage.getItem('theme');
      }
      return window.matchMedia('(prefers-color-scheme: dark)').matches
        ? 'dark'
        : 'light';
    };
    const isDark = getThemePreference() === 'dark';
    document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

    if (typeof localStorage !== 'undefined') {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['class'],
      });
    }
  }

  setDarkMode(document);

  document.addEventListener('astro:before-swap', (ev) => {
    // Pass the incoming document to set the theme on it
    setDarkMode(ev.newDocument);
  });
</script> -->
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="min-h-svh w-full bg-background relative font-body flex flex-col">
    <div
      class="bg-background/95 h-28 fixed left-0 top-0 w-full backdrop-blur-sm gradient-mask-b-0"
    >
    </div>
    <!-- max-w-screen-sm w-full mx-auto  -->
    <main class="pt-32 flex-1">
      <!-- <div class="container"> -->
      <div class="content-grid">
        <slot />
      </div>
      <!-- </div> -->
    </main>

    <Footer />
    {!isProd && <TailwindIndicator />}
  </body>
</html>
