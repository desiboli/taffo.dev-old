---
import { type CollectionEntry, getCollection } from 'astro:content'
import { Breadcrumbs, type BreadcrumbsProps } from '@/components/Breadcrumb'
import TableOfContents from '@/components/TableOfContents'
import generateToc from '@/lib/generateToc'
import Prose from '@/components/Prose.astro'
import BlogPost from '@/layouts/BlogPost.astro'

export async function getStaticPaths() {
  const notes = await getCollection('notes')
  return notes.map((note) => ({
    params: { slug: note.slug },
    props: note,
  }))
}
type Props = CollectionEntry<'notes'>

const note = Astro.props
const { Content, headings } = await note.render()

const items: BreadcrumbsProps[] = [
  { href: '/', label: 'Home' },
  { href: '/writing', label: 'Writing' },
  { href: '/notes', label: 'Notes', isActive: true },
  { href: '/snippets', label: 'Snippets' },
]
---

<BlogPost {...note.data}>
  <Breadcrumbs slot="breadcrumbs" client:load breadcrumbItems={items} />

  {
    headings && (
      <Fragment slot="aside">
        <nav>
          <TableOfContents
            client:media="(min-width: 64em)"
            toc={generateToc(headings)}
            isMobile={false}
          />
        </nav>
      </Fragment>
    )
  }

  <Prose>
    <Content />
  </Prose>
</BlogPost>
